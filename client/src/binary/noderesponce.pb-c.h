/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: noderesponce.proto */

#ifndef PROTOBUF_C_noderesponce_2eproto__INCLUDED
#define PROTOBUF_C_noderesponce_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "relationshipnoderesponce.pb-c.h"
#include "simplenode.pb-c.h"
#include "propertyresponce.pb-c.h"

typedef struct NodeResponce NodeResponce;


/* --- enums --- */


/* --- messages --- */

struct  NodeResponce
{
  ProtobufCMessage base;
  SimpleNodeMessage *simple_node;
  size_t n_relationships;
  RelationshipNodeResponce **relationships;
  size_t n_properties;
  PropertyResponce **properties;
};
#define NODE_RESPONCE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&node_responce__descriptor) \
    , NULL, 0,NULL, 0,NULL }


/* NodeResponce methods */
void   node_responce__init
                     (NodeResponce         *message);
size_t node_responce__get_packed_size
                     (const NodeResponce   *message);
size_t node_responce__pack
                     (const NodeResponce   *message,
                      uint8_t             *out);
size_t node_responce__pack_to_buffer
                     (const NodeResponce   *message,
                      ProtobufCBuffer     *buffer);
NodeResponce *
       node_responce__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   node_responce__free_unpacked
                     (NodeResponce *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*NodeResponce_Closure)
                 (const NodeResponce *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor node_responce__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_noderesponce_2eproto__INCLUDED */
