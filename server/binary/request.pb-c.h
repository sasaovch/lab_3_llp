/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: request.proto */

#ifndef PROTOBUF_C_request_2eproto__INCLUDED
#define PROTOBUF_C_request_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "operation.pb-c.h"
#include "filter.pb-c.h"
#include "entity.pb-c.h"
#include "node.pb-c.h"
#include "relationship.pb-c.h"
#include "property.pb-c.h"
#include "typeelement.pb-c.h"
#include "iterator.pb-c.h"

typedef struct RequestMessage RequestMessage;


/* --- enums --- */


/* --- messages --- */

struct  RequestMessage
{
  ProtobufCMessage base;
  OperationProto operation;
  TypeOfElementProto type;
  FilterMessage *filter;
  EntityMessage *entity;
  NodeMessage *node;
  RelationshipMessage *relationship;
  PropertyMessage *property;
  size_t n_relationships;
  char **relationships;
  size_t n_properties;
  char **properties;
  IteratorMessage *iterator;
};
#define REQUEST_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&request_message__descriptor) \
    , OPERATION_PROTO__CREATE_NODE, TYPE_OF_ELEMENT_PROTO__NODE, NULL, NULL, NULL, NULL, NULL, 0,NULL, 0,NULL, NULL }


/* RequestMessage methods */
void   request_message__init
                     (RequestMessage         *message);
size_t request_message__get_packed_size
                     (const RequestMessage   *message);
size_t request_message__pack
                     (const RequestMessage   *message,
                      uint8_t             *out);
size_t request_message__pack_to_buffer
                     (const RequestMessage   *message,
                      ProtobufCBuffer     *buffer);
RequestMessage *
       request_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   request_message__free_unpacked
                     (RequestMessage *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*RequestMessage_Closure)
                 (const RequestMessage *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor request_message__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_request_2eproto__INCLUDED */
