/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: property.proto */

#ifndef PROTOBUF_C_property_2eproto__INCLUDED
#define PROTOBUF_C_property_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "valuetype.pb-c.h"

typedef struct PropertyMessage PropertyMessage;


/* --- enums --- */


/* --- messages --- */

struct  PropertyMessage
{
  ProtobufCMessage base;
  ValueTypeProto value_type;
  int32_t subject_id;
  char *type;
  char *subject_type;
  char *value;
};
#define PROPERTY_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&property_message__descriptor) \
    , VALUE_TYPE_PROTO__INT, 0, NULL, NULL, NULL }


/* PropertyMessage methods */
void   property_message__init
                     (PropertyMessage         *message);
size_t property_message__get_packed_size
                     (const PropertyMessage   *message);
size_t property_message__pack
                     (const PropertyMessage   *message,
                      uint8_t             *out);
size_t property_message__pack_to_buffer
                     (const PropertyMessage   *message,
                      ProtobufCBuffer     *buffer);
PropertyMessage *
       property_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   property_message__free_unpacked
                     (PropertyMessage *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*PropertyMessage_Closure)
                 (const PropertyMessage *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor property_message__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_property_2eproto__INCLUDED */
